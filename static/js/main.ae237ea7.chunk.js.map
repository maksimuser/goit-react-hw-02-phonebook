{"version":3,"sources":["ContactForm/ContactForm.jsx","Filter/Filter.jsx","ContactList/ContactItem/ContactItem.jsx","ContactList/ContactList.jsx","App.jsx","index.js"],"names":["ContactForm","state","name","number","nameId","uuidv4","numberId","handleChange","e","currentTarget","value","setState","handleSubmit","onSubmit","props","preventDefault","resetForm","this","autoComplete","htmlFor","type","pattern","title","required","onChange","id","Component","Filter","filterId","filter","defaultProps","ContactItem","onDeleteItem","onClick","ContactList","onVisibleFilter","onDeleteContact","map","App","contacts","findName","find","contact","addNewContact","alert","prevState","deleteContact","contactId","changeFilter","getVisibleContact","normalizedFilter","toLowerCase","includes","visibleFilter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae237ea7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass ContactForm extends Component {\n  state = { name: '', number: '' };\n\n  nameId = uuidv4();\n  numberId = uuidv4();\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    const { onSubmit } = this.props;\n\n    e.preventDefault();\n\n    onSubmit(this.state);\n\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} autoComplete=\"off\">\n        <label htmlFor={this.nameId}>Name </label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={this.handleChange}\n          id={this.nameId}\n        />\n        <br />\n        <br />\n        <label htmlFor={this.numberId}>Number </label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n          id={this.numberId}\n          value={number}\n          onChange={this.handleChange}\n        />\n        <br />\n        <br />\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default ContactForm;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass Filter extends Component {\n  filterId = uuidv4();\n  render() {\n    const { filter, onChange } = this.props;\n\n    return (\n      <>\n        <label htmlFor={this.filterId}>Find contacts by name </label>\n        <input\n          type=\"text\"\n          value={filter}\n          id={this.filterId}\n          onChange={onChange}\n        />\n      </>\n    );\n  }\n}\n\nFilter.defaultProps = {\n  filter: '',\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ContactItem extends Component {\n  render() {\n    const { name, number, onDeleteItem } = this.props;\n\n    return (\n      <li>\n        {name}: {number}\n        <button onClick={onDeleteItem} type=\"button\">\n          Delete\n        </button>\n      </li>\n    );\n  }\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteItem: PropTypes.func.isRequired,\n};\nexport default ContactItem;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ContactItem from './ContactItem';\n\nclass ContactList extends Component {\n  render() {\n    const { onVisibleFilter, onDeleteContact } = this.props;\n    return (\n      <ul>\n        {onVisibleFilter.map(({ id, name, number }) => {\n          return (\n            <ContactItem\n              key={id}\n              name={name}\n              number={number}\n              onDeleteItem={() => onDeleteContact(id)}\n            />\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nContactList.defaultProps = {\n  onVisibleFilter: [],\n};\n\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  onVisibleFilter: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.string.isRequired }),\n  ),\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactList from './ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: uuidv4(), name: 'Rosie Simpson', number: '459-12-56' },\n      { id: uuidv4(), name: 'Hermione Kline', number: '443-89-12' },\n      { id: uuidv4(), name: 'Eden Clements', number: '645-17-79' },\n      { id: uuidv4(), name: 'Annie Copeland', number: '227-91-26' },\n    ],\n\n    filter: '',\n  };\n\n  findName = name => {\n    const { contacts } = this.state;\n    return contacts.find(contact => contact.name === name);\n  };\n\n  addNewContact = ({ name, number }) => {\n    const checkName = this.findName(name);\n\n    if (checkName) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.setState(prevState => {\n      return { contacts: [contact, ...prevState.contacts] };\n    });\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContact = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleFilter = this.getVisibleContact();\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addNewContact} />\n        <h2>Contacts</h2>\n        <Filter filter={filter} onChange={this.changeFilter} />\n        <ContactList\n          onVisibleFilter={visibleFilter}\n          onDeleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}